const express = require("express")        const Router = express.Router();        const model = require('./model')        const User = model.getModel('user');        const utils = require("utility")        const _filter ={'pws':0,'__v':0}        const Chat = model.getModel('chat')//处理/list的get请求        Router.get('/list',function (req,res) {            const {type} = req.query            User.find({type},function (err,doc) {                return res.json({code:0,data:doc})            });        })        Router.get('/getmsglist',function (req,res) {    const user = req.cookies.userid            User.find({},function (e,userdoc) {                let users = {}                userdoc.forEach(v=>{                    users[v._id] = {name:v.user,avater:v.avater}                })                Chat.find({'$or':[{from:user},{to:user}]},function (err,doc) {                    if(!err){                        console.log(doc)                        return res.json({code:0,msgs:doc,users:users})                    }                })            })})        Router.post('/readmsg',function (req,res) {            const userid = req.cookies.userid            const {from} = req.body            // console.log()            Chat.update(                {from,to:userid},                {'$set':{read:true}},                {'multi':true},                function (err,doc){                console.log(doc)                if(!err){                    return res.json({code:0,num:doc.nModified})                }                return res.json({code:1,msg:"修改失败"})            })        })        Router.post('/update',function (req,res) {            const userid = req.cookies.userid            if(!userid){                return json.dumps({code:1})            }            const body = req.body            console.log(body)            User.findByIdAndUpdate(userid,body,function (err,doc) {                const data = Object.assign({},{                    user:doc.user,                    type:doc.type        },body)        return res.json({code:0,data})    })})Router.post('/login',function (req,res) {    const {user,pws} = req.body    User.findOne({user,pws:md5pws(pws)},_filter,function (err,doc) {        if(!doc) {            return res.json({code: 1, msg: "用户名或者密码错误"})        }        res.cookie('userid',doc._id)        return res.json({code:0,data:doc})    })})//删除数据库数据// User.remove({type:'genius'},function(err,doc){//     console.log(doc)// })//处理/register的post请求Router.post('/register',function (req,res) {    console.log(req.body)    const {user,pws,type} = req.body    //查询数据库有没有此用户名    User.findOne({user},function (err,doc) {        if(doc){            return res.json({code:1,msg:"用户名重复"})        }        //存储的数据库一条新json数据        const userModel = new User({user,type,pws:md5pws(pws)})        userModel.save(function (e,d) {            if(e){                return res.json({code:1,msg:"后端出错了"})            }            const {user,type,_id} = d            res.cookie('userid',_id)            return res.json({code:0,data:{user,type,_id}})        })    })});//处理/info的get请求Router.get('/info',function(req,res){    const {userid} = req.cookies    if(!userid){        return res.json({code: 1})    }    User.findOne({_id:userid},_filter,function (err,doc){        if(err){            return res.json({code:1,msg:"后端出错了"})        }        if(doc){            return res.json({code:0,data:doc})        }    })});function md5pws(pws) {    const salt = 'wangzihan_is_good_18700987040a1091812184@163.com~~'    return utils.md5(utils.md5(salt))}module.exports = Router;